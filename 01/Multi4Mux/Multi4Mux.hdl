CHIP Multi4Mux {
    /**
    * 00ならaを出力
    * 01ならbを出力
    * 10ならcを出力
    * 11ならdを出力
    */
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    // Mux16を使う
    Mux16(a=a, b=b, sel=sel[0], out=r1);
    Mux16(a=c, b=d, sel=sel[0], out=r2);
    Mux16(a=r1, b=r2, sel=sel[1], out=out);

    // Muxを使う
    // Mux(a=a, b=b, sel=sel[0], out=r1);
    // Mux(a=c, b=d, sel=sel[0], out=r2);
    // Mux(a=r1, b=r2, sel=sel[1], out=out);

    // 愚直に作成
    // Not(in=sel[0], out=notsel0);
    // Not(in=sel[1], out=notsel1);

    // And(a=a, b=notsel1, out=middlea);
    // And(a=middlea, b=notsel0, out=finala);

    // And(a=b, b=notsel1, out=middleb);
    // And(a=middleb, b=sel[0], out=finalb);

    // And(a=c, b=sel[1], out=middlec);
    // And(a=middlec, b=notsel0, out=finalc);

    // And(a=d, b=sel[1], out=middled);
    // And(a=middled, b=sel[0], out=finald);

    // Or(a=finala, b=finalb, out=anb);
    // Or(a=finalc, b=finald, out=cnd);

    // Or(a=anb, b=cnd, out=out);
}